// mojom-webui/ui/webui/resources/cr_components/app_management/app_management.mojom-webui.js is auto generated by mojom_bindings_generator.py, do not edit
// Copyright 2020 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
import { mojo } from '//resources/mojo/mojo/public/js/bindings.js';
import { UrlSpec as url_mojom_UrlSpec } from 'chrome://resources/mojo/url/mojom/url.mojom-webui.js';
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const AppTypeSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const AppType = {
    kUnknown: 0,
    kArc: 1,
    kBuiltIn: 2,
    kCrostini: 3,
    kChromeApp: 4,
    kWeb: 5,
    kMacOs: 6,
    kPluginVm: 7,
    kStandaloneBrowser: 8,
    kRemote: 9,
    kBorealis: 10,
    kSystemWeb: 11,
    kStandaloneBrowserChromeApp: 12,
    kExtension: 13,
    kStandaloneBrowserExtension: 14,
    MIN_VALUE: 0,
    MAX_VALUE: 14,
};
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const OptionalBoolSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const OptionalBool = {
    kUnknown: 0,
    kFalse: 1,
    kTrue: 2,
    MIN_VALUE: 0,
    MAX_VALUE: 2,
};
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const PermissionTypeSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const PermissionType = {
    kUnknown: 0,
    kCamera: 1,
    kLocation: 2,
    kMicrophone: 3,
    kNotifications: 4,
    kContacts: 5,
    kStorage: 6,
    kPrinting: 7,
    kFileHandling: 8,
    MIN_VALUE: 0,
    MAX_VALUE: 8,
};
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const TriStateSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const TriState = {
    kAllow: 0,
    kBlock: 1,
    kAsk: 2,
    MIN_VALUE: 0,
    MAX_VALUE: 2,
};
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const InstallReasonSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const InstallReason = {
    kUnknown: 0,
    kSystem: 1,
    kPolicy: 2,
    kOem: 3,
    kDefault: 4,
    kSync: 5,
    kUser: 6,
    kSubApp: 7,
    kKiosk: 8,
    kCommandLine: 9,
    MIN_VALUE: 0,
    MAX_VALUE: 9,
};
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const InstallSourceSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const InstallSource = {
    kUnknown: 0,
    kSystem: 1,
    kSync: 2,
    kPlayStore: 3,
    kChromeWebStore: 4,
    kBrowser: 5,
    MIN_VALUE: 0,
    MAX_VALUE: 5,
};
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const WindowModeSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const WindowMode = {
    kUnknown: 0,
    kWindow: 1,
    kBrowser: 2,
    kTabbedWindow: 3,
    MIN_VALUE: 0,
    MAX_VALUE: 3,
};
/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const RunOnOsLoginModeSpec = { $: mojo.internal.Enum() };
/**
 * @enum {number}
 */
export const RunOnOsLoginMode = {
    kUnknown: 0,
    kNotRun: 1,
    kWindowed: 2,
    MIN_VALUE: 0,
    MAX_VALUE: 2,
};
/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class PageHandlerFactoryPendingReceiver {
    /**
     * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
     */
    constructor(handle) {
        /** @public {!mojo.internal.interfaceSupport.Endpoint} */
        this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
    }
    /** @param {string=} scope */
    bindInBrowser(scope = 'context') {
        mojo.internal.interfaceSupport.bind(this.handle, 'app_management.mojom.PageHandlerFactory', scope);
    }
}
/** @interface */
export class PageHandlerFactoryInterface {
    /**
     * @param { !PageRemote } page
     * @param { !PageHandlerPendingReceiver } handler
     */
    createPageHandler(page, handler) { }
}
/**
 * @implements { PageHandlerFactoryInterface }
 */
export class PageHandlerFactoryRemote {
    /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
    constructor(handle = undefined) {
        /**
         * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!PageHandlerFactoryPendingReceiver>}
         */
        this.proxy =
            new mojo.internal.interfaceSupport.InterfaceRemoteBase(PageHandlerFactoryPendingReceiver, handle);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!PageHandlerFactoryPendingReceiver>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
    }
    /**
     * @param { !PageRemote } page
     * @param { !PageHandlerPendingReceiver } handler
     */
    createPageHandler(page, handler) {
        this.proxy.sendMessage(919446692, PageHandlerFactory_CreatePageHandler_ParamsSpec.$, null, [
            page,
            handler
        ]);
    }
}
/**
 * An object which receives request messages for the PageHandlerFactory
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class PageHandlerFactoryReceiver {
    /**
     * @param {!PageHandlerFactoryInterface } impl
     */
    constructor(impl) {
        /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!PageHandlerFactoryRemote>} */
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(PageHandlerFactoryRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!PageHandlerFactoryRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.helper_internal_.registerHandler(919446692, PageHandlerFactory_CreatePageHandler_ParamsSpec.$, null, impl.createPageHandler.bind(impl));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
}
export class PageHandlerFactory {
    /**
     * @return {!string}
     */
    static get $interfaceName() {
        return "app_management.mojom.PageHandlerFactory";
    }
    /**
     * Returns a remote for this interface which sends messages to the browser.
     * The browser must have an interface request binder registered for this
     * interface and accessible to the calling document's frame.
     *
     * @return {!PageHandlerFactoryRemote}
     */
    static getRemote() {
        let remote = new PageHandlerFactoryRemote;
        remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
        return remote;
    }
}
/**
 * An object which receives request messages for the PageHandlerFactory
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class PageHandlerFactoryCallbackRouter {
    constructor() {
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(PageHandlerFactoryRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!PageHandlerFactoryRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.createPageHandler =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(919446692, PageHandlerFactory_CreatePageHandler_ParamsSpec.$, null, this.createPageHandler.createReceiverHandler(false /* expectsResponse */));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
    /**
     * @param {number} id An ID returned by a prior call to addListener.
     * @return {boolean} True iff the identified listener was found and removed.
     */
    removeListener(id) {
        return this.router_.removeListener(id);
    }
}
/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class PageHandlerPendingReceiver {
    /**
     * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
     */
    constructor(handle) {
        /** @public {!mojo.internal.interfaceSupport.Endpoint} */
        this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
    }
    /** @param {string=} scope */
    bindInBrowser(scope = 'context') {
        mojo.internal.interfaceSupport.bind(this.handle, 'app_management.mojom.PageHandler', scope);
    }
}
/** @interface */
export class PageHandlerInterface {
    /**
     * @return {!Promise<{
          apps: !Array<!App>,
     *  }>}
     */
    getApps() { }
    /**
     * @param { !string } appId
     * @return {!Promise<{
          app: ?App,
     *  }>}
     */
    getApp(appId) { }
    /**
     * @param { !string } appId
     * @return {!Promise<{
          messages: !Array<!ExtensionAppPermissionMessage>,
     *  }>}
     */
    getExtensionAppPermissionMessages(appId) { }
    /**
     * @param { !string } appId
     * @param { !OptionalBool } pinned
     */
    setPinned(appId, pinned) { }
    /**
     * @param { !string } appId
     * @param { !Permission } permission
     */
    setPermission(appId, permission) { }
    /**
     * @param { !string } appId
     * @param { !boolean } locked
     */
    setResizeLocked(appId, locked) { }
    /**
     * @param { !string } appId
     */
    uninstall(appId) { }
    /**
     * @param { !string } appId
     */
    openNativeSettings(appId) { }
    /**
     * @param { !string } appId
     * @param { !boolean } isPreferredApp
     */
    setPreferredApp(appId, isPreferredApp) { }
    /**
     * @param { !string } appId
     * @return {!Promise<{
          appIds: !Array<!string>,
     *  }>}
     */
    getOverlappingPreferredApps(appId) { }
    /**
     * @param { !string } appId
     * @param { !WindowMode } windowMode
     */
    setWindowMode(appId, windowMode) { }
    /**
     * @param { !string } appId
     * @param { !RunOnOsLoginMode } runOnOsLoginMode
     */
    setRunOnOsLoginMode(appId, runOnOsLoginMode) { }
    /**
     * @param { !string } appId
     * @param { !boolean } enabled
     */
    setFileHandlingEnabled(appId, enabled) { }
    /**
     */
    showDefaultAppAssociationsUi() { }
    /**
     * @param { !string } appId
     */
    openStorePage(appId) { }
}
/**
 * @implements { PageHandlerInterface }
 */
export class PageHandlerRemote {
    /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
    constructor(handle = undefined) {
        /**
         * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!PageHandlerPendingReceiver>}
         */
        this.proxy =
            new mojo.internal.interfaceSupport.InterfaceRemoteBase(PageHandlerPendingReceiver, handle);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!PageHandlerPendingReceiver>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
    }
    /**
     * @return {!Promise<{
          apps: !Array<!App>,
     *  }>}
     */
    getApps() {
        return this.proxy.sendMessage(1655789543, PageHandler_GetApps_ParamsSpec.$, PageHandler_GetApps_ResponseParamsSpec.$, []);
    }
    /**
     * @param { !string } appId
     * @return {!Promise<{
          app: ?App,
     *  }>}
     */
    getApp(appId) {
        return this.proxy.sendMessage(279590006, PageHandler_GetApp_ParamsSpec.$, PageHandler_GetApp_ResponseParamsSpec.$, [
            appId
        ]);
    }
    /**
     * @param { !string } appId
     * @return {!Promise<{
          messages: !Array<!ExtensionAppPermissionMessage>,
     *  }>}
     */
    getExtensionAppPermissionMessages(appId) {
        return this.proxy.sendMessage(312329846, PageHandler_GetExtensionAppPermissionMessages_ParamsSpec.$, PageHandler_GetExtensionAppPermissionMessages_ResponseParamsSpec.$, [
            appId
        ]);
    }
    /**
     * @param { !string } appId
     * @param { !OptionalBool } pinned
     */
    setPinned(appId, pinned) {
        this.proxy.sendMessage(1033934979, PageHandler_SetPinned_ParamsSpec.$, null, [
            appId,
            pinned
        ]);
    }
    /**
     * @param { !string } appId
     * @param { !Permission } permission
     */
    setPermission(appId, permission) {
        this.proxy.sendMessage(472742844, PageHandler_SetPermission_ParamsSpec.$, null, [
            appId,
            permission
        ]);
    }
    /**
     * @param { !string } appId
     * @param { !boolean } locked
     */
    setResizeLocked(appId, locked) {
        this.proxy.sendMessage(216003803, PageHandler_SetResizeLocked_ParamsSpec.$, null, [
            appId,
            locked
        ]);
    }
    /**
     * @param { !string } appId
     */
    uninstall(appId) {
        this.proxy.sendMessage(1661164391, PageHandler_Uninstall_ParamsSpec.$, null, [
            appId
        ]);
    }
    /**
     * @param { !string } appId
     */
    openNativeSettings(appId) {
        this.proxy.sendMessage(2081057, PageHandler_OpenNativeSettings_ParamsSpec.$, null, [
            appId
        ]);
    }
    /**
     * @param { !string } appId
     * @param { !boolean } isPreferredApp
     */
    setPreferredApp(appId, isPreferredApp) {
        this.proxy.sendMessage(1640420889, PageHandler_SetPreferredApp_ParamsSpec.$, null, [
            appId,
            isPreferredApp
        ]);
    }
    /**
     * @param { !string } appId
     * @return {!Promise<{
          appIds: !Array<!string>,
     *  }>}
     */
    getOverlappingPreferredApps(appId) {
        return this.proxy.sendMessage(636744671, PageHandler_GetOverlappingPreferredApps_ParamsSpec.$, PageHandler_GetOverlappingPreferredApps_ResponseParamsSpec.$, [
            appId
        ]);
    }
    /**
     * @param { !string } appId
     * @param { !WindowMode } windowMode
     */
    setWindowMode(appId, windowMode) {
        this.proxy.sendMessage(1738040033, PageHandler_SetWindowMode_ParamsSpec.$, null, [
            appId,
            windowMode
        ]);
    }
    /**
     * @param { !string } appId
     * @param { !RunOnOsLoginMode } runOnOsLoginMode
     */
    setRunOnOsLoginMode(appId, runOnOsLoginMode) {
        this.proxy.sendMessage(881133801, PageHandler_SetRunOnOsLoginMode_ParamsSpec.$, null, [
            appId,
            runOnOsLoginMode
        ]);
    }
    /**
     * @param { !string } appId
     * @param { !boolean } enabled
     */
    setFileHandlingEnabled(appId, enabled) {
        this.proxy.sendMessage(2026467718, PageHandler_SetFileHandlingEnabled_ParamsSpec.$, null, [
            appId,
            enabled
        ]);
    }
    /**
     */
    showDefaultAppAssociationsUi() {
        this.proxy.sendMessage(2011990609, PageHandler_ShowDefaultAppAssociationsUi_ParamsSpec.$, null, []);
    }
    /**
     * @param { !string } appId
     */
    openStorePage(appId) {
        this.proxy.sendMessage(815288096, PageHandler_OpenStorePage_ParamsSpec.$, null, [
            appId
        ]);
    }
}
/**
 * An object which receives request messages for the PageHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class PageHandlerReceiver {
    /**
     * @param {!PageHandlerInterface } impl
     */
    constructor(impl) {
        /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!PageHandlerRemote>} */
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(PageHandlerRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!PageHandlerRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.helper_internal_.registerHandler(1655789543, PageHandler_GetApps_ParamsSpec.$, PageHandler_GetApps_ResponseParamsSpec.$, impl.getApps.bind(impl));
        this.helper_internal_.registerHandler(279590006, PageHandler_GetApp_ParamsSpec.$, PageHandler_GetApp_ResponseParamsSpec.$, impl.getApp.bind(impl));
        this.helper_internal_.registerHandler(312329846, PageHandler_GetExtensionAppPermissionMessages_ParamsSpec.$, PageHandler_GetExtensionAppPermissionMessages_ResponseParamsSpec.$, impl.getExtensionAppPermissionMessages.bind(impl));
        this.helper_internal_.registerHandler(1033934979, PageHandler_SetPinned_ParamsSpec.$, null, impl.setPinned.bind(impl));
        this.helper_internal_.registerHandler(472742844, PageHandler_SetPermission_ParamsSpec.$, null, impl.setPermission.bind(impl));
        this.helper_internal_.registerHandler(216003803, PageHandler_SetResizeLocked_ParamsSpec.$, null, impl.setResizeLocked.bind(impl));
        this.helper_internal_.registerHandler(1661164391, PageHandler_Uninstall_ParamsSpec.$, null, impl.uninstall.bind(impl));
        this.helper_internal_.registerHandler(2081057, PageHandler_OpenNativeSettings_ParamsSpec.$, null, impl.openNativeSettings.bind(impl));
        this.helper_internal_.registerHandler(1640420889, PageHandler_SetPreferredApp_ParamsSpec.$, null, impl.setPreferredApp.bind(impl));
        this.helper_internal_.registerHandler(636744671, PageHandler_GetOverlappingPreferredApps_ParamsSpec.$, PageHandler_GetOverlappingPreferredApps_ResponseParamsSpec.$, impl.getOverlappingPreferredApps.bind(impl));
        this.helper_internal_.registerHandler(1738040033, PageHandler_SetWindowMode_ParamsSpec.$, null, impl.setWindowMode.bind(impl));
        this.helper_internal_.registerHandler(881133801, PageHandler_SetRunOnOsLoginMode_ParamsSpec.$, null, impl.setRunOnOsLoginMode.bind(impl));
        this.helper_internal_.registerHandler(2026467718, PageHandler_SetFileHandlingEnabled_ParamsSpec.$, null, impl.setFileHandlingEnabled.bind(impl));
        this.helper_internal_.registerHandler(2011990609, PageHandler_ShowDefaultAppAssociationsUi_ParamsSpec.$, null, impl.showDefaultAppAssociationsUi.bind(impl));
        this.helper_internal_.registerHandler(815288096, PageHandler_OpenStorePage_ParamsSpec.$, null, impl.openStorePage.bind(impl));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
}
export class PageHandler {
    /**
     * @return {!string}
     */
    static get $interfaceName() {
        return "app_management.mojom.PageHandler";
    }
    /**
     * Returns a remote for this interface which sends messages to the browser.
     * The browser must have an interface request binder registered for this
     * interface and accessible to the calling document's frame.
     *
     * @return {!PageHandlerRemote}
     */
    static getRemote() {
        let remote = new PageHandlerRemote;
        remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
        return remote;
    }
}
/**
 * An object which receives request messages for the PageHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class PageHandlerCallbackRouter {
    constructor() {
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(PageHandlerRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!PageHandlerRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.getApps =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1655789543, PageHandler_GetApps_ParamsSpec.$, PageHandler_GetApps_ResponseParamsSpec.$, this.getApps.createReceiverHandler(true /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.getApp =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(279590006, PageHandler_GetApp_ParamsSpec.$, PageHandler_GetApp_ResponseParamsSpec.$, this.getApp.createReceiverHandler(true /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.getExtensionAppPermissionMessages =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(312329846, PageHandler_GetExtensionAppPermissionMessages_ParamsSpec.$, PageHandler_GetExtensionAppPermissionMessages_ResponseParamsSpec.$, this.getExtensionAppPermissionMessages.createReceiverHandler(true /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.setPinned =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1033934979, PageHandler_SetPinned_ParamsSpec.$, null, this.setPinned.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.setPermission =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(472742844, PageHandler_SetPermission_ParamsSpec.$, null, this.setPermission.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.setResizeLocked =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(216003803, PageHandler_SetResizeLocked_ParamsSpec.$, null, this.setResizeLocked.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.uninstall =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1661164391, PageHandler_Uninstall_ParamsSpec.$, null, this.uninstall.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.openNativeSettings =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(2081057, PageHandler_OpenNativeSettings_ParamsSpec.$, null, this.openNativeSettings.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.setPreferredApp =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1640420889, PageHandler_SetPreferredApp_ParamsSpec.$, null, this.setPreferredApp.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.getOverlappingPreferredApps =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(636744671, PageHandler_GetOverlappingPreferredApps_ParamsSpec.$, PageHandler_GetOverlappingPreferredApps_ResponseParamsSpec.$, this.getOverlappingPreferredApps.createReceiverHandler(true /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.setWindowMode =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1738040033, PageHandler_SetWindowMode_ParamsSpec.$, null, this.setWindowMode.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.setRunOnOsLoginMode =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(881133801, PageHandler_SetRunOnOsLoginMode_ParamsSpec.$, null, this.setRunOnOsLoginMode.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.setFileHandlingEnabled =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(2026467718, PageHandler_SetFileHandlingEnabled_ParamsSpec.$, null, this.setFileHandlingEnabled.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.showDefaultAppAssociationsUi =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(2011990609, PageHandler_ShowDefaultAppAssociationsUi_ParamsSpec.$, null, this.showDefaultAppAssociationsUi.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.openStorePage =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(815288096, PageHandler_OpenStorePage_ParamsSpec.$, null, this.openStorePage.createReceiverHandler(false /* expectsResponse */));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
    /**
     * @param {number} id An ID returned by a prior call to addListener.
     * @return {boolean} True iff the identified listener was found and removed.
     */
    removeListener(id) {
        return this.router_.removeListener(id);
    }
}
/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class PagePendingReceiver {
    /**
     * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
     */
    constructor(handle) {
        /** @public {!mojo.internal.interfaceSupport.Endpoint} */
        this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
    }
    /** @param {string=} scope */
    bindInBrowser(scope = 'context') {
        mojo.internal.interfaceSupport.bind(this.handle, 'app_management.mojom.Page', scope);
    }
}
/** @interface */
export class PageInterface {
    /**
     * @param { !App } app
     */
    onAppAdded(app) { }
    /**
     * @param { !App } update
     */
    onAppChanged(update) { }
    /**
     * @param { !string } appId
     */
    onAppRemoved(appId) { }
}
/**
 * @implements { PageInterface }
 */
export class PageRemote {
    /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
    constructor(handle = undefined) {
        /**
         * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!PagePendingReceiver>}
         */
        this.proxy =
            new mojo.internal.interfaceSupport.InterfaceRemoteBase(PagePendingReceiver, handle);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!PagePendingReceiver>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
    }
    /**
     * @param { !App } app
     */
    onAppAdded(app) {
        this.proxy.sendMessage(325622195, Page_OnAppAdded_ParamsSpec.$, null, [
            app
        ]);
    }
    /**
     * @param { !App } update
     */
    onAppChanged(update) {
        this.proxy.sendMessage(2069419292, Page_OnAppChanged_ParamsSpec.$, null, [
            update
        ]);
    }
    /**
     * @param { !string } appId
     */
    onAppRemoved(appId) {
        this.proxy.sendMessage(1724118882, Page_OnAppRemoved_ParamsSpec.$, null, [
            appId
        ]);
    }
}
/**
 * An object which receives request messages for the Page
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class PageReceiver {
    /**
     * @param {!PageInterface } impl
     */
    constructor(impl) {
        /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!PageRemote>} */
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(PageRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!PageRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.helper_internal_.registerHandler(325622195, Page_OnAppAdded_ParamsSpec.$, null, impl.onAppAdded.bind(impl));
        this.helper_internal_.registerHandler(2069419292, Page_OnAppChanged_ParamsSpec.$, null, impl.onAppChanged.bind(impl));
        this.helper_internal_.registerHandler(1724118882, Page_OnAppRemoved_ParamsSpec.$, null, impl.onAppRemoved.bind(impl));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
}
export class Page {
    /**
     * @return {!string}
     */
    static get $interfaceName() {
        return "app_management.mojom.Page";
    }
    /**
     * Returns a remote for this interface which sends messages to the browser.
     * The browser must have an interface request binder registered for this
     * interface and accessible to the calling document's frame.
     *
     * @return {!PageRemote}
     */
    static getRemote() {
        let remote = new PageRemote;
        remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
        return remote;
    }
}
/**
 * An object which receives request messages for the Page
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class PageCallbackRouter {
    constructor() {
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(PageRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!PageRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.onAppAdded =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(325622195, Page_OnAppAdded_ParamsSpec.$, null, this.onAppAdded.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.onAppChanged =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(2069419292, Page_OnAppChanged_ParamsSpec.$, null, this.onAppChanged.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.onAppRemoved =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1724118882, Page_OnAppRemoved_ParamsSpec.$, null, this.onAppRemoved.createReceiverHandler(false /* expectsResponse */));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
    /**
     * @param {number} id An ID returned by a prior call to addListener.
     * @return {boolean} True iff the identified listener was found and removed.
     */
    removeListener(id) {
        return this.router_.removeListener(id);
    }
}
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PermissionSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const RunOnOsLoginSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AppSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ExtensionAppPermissionMessageSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FileHandlingStateSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandlerFactory_CreatePageHandler_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetApps_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetApps_ResponseParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetApp_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetApp_ResponseParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetExtensionAppPermissionMessages_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetExtensionAppPermissionMessages_ResponseParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_SetPinned_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_SetPermission_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_SetResizeLocked_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_Uninstall_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_OpenNativeSettings_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_SetPreferredApp_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetOverlappingPreferredApps_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_GetOverlappingPreferredApps_ResponseParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_SetWindowMode_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_SetRunOnOsLoginMode_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_SetFileHandlingEnabled_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_ShowDefaultAppAssociationsUi_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PageHandler_OpenStorePage_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Page_OnAppAdded_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Page_OnAppChanged_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Page_OnAppRemoved_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType} }
 */
export const PermissionValueSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
mojo.internal.Struct(PermissionSpec.$, 'Permission', [
    mojo.internal.StructField('permissionType', 0, 0, PermissionTypeSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('value', 8, 0, PermissionValueSpec.$, null, false /* nullable */, 0),
    mojo.internal.StructField('isManaged', 4, 0, mojo.internal.Bool, false, false /* nullable */, 0),
], [[0, 32],]);
/**
 * @record
 */
export class Permission {
    constructor() {
        /** @type { !PermissionType } */
        this.permissionType;
        /** @type { !boolean } */
        this.isManaged;
        /** @type { !PermissionValue } */
        this.value;
    }
}
mojo.internal.Struct(RunOnOsLoginSpec.$, 'RunOnOsLogin', [
    mojo.internal.StructField('loginMode', 0, 0, RunOnOsLoginModeSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('isManaged', 4, 0, mojo.internal.Bool, false, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class RunOnOsLogin {
    constructor() {
        /** @type { !RunOnOsLoginMode } */
        this.loginMode;
        /** @type { !boolean } */
        this.isManaged;
    }
}
mojo.internal.Struct(AppSpec.$, 'App', [
    mojo.internal.StructField('id', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('type', 8, 0, AppTypeSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('title', 16, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('description', 24, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('isPinned', 12, 0, OptionalBoolSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('isPolicyPinned', 32, 0, OptionalBoolSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('version', 40, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('size', 48, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('permissions', 56, 0, mojo.internal.Map(PermissionTypeSpec.$, PermissionSpec.$, false), null, false /* nullable */, 0),
    mojo.internal.StructField('installReason', 36, 0, InstallReasonSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('installSource', 64, 0, InstallSourceSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('hideMoreSettings', 68, 0, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('hidePinToShelf', 68, 1, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('isPreferredApp', 68, 2, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('windowMode', 72, 0, WindowModeSpec.$, 0, false /* nullable */, 0),
    mojo.internal.StructField('hideWindowMode', 68, 3, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('resizeLocked', 68, 4, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('hideResizeLocked', 68, 5, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('supportedLinks', 80, 0, mojo.internal.Array(mojo.internal.String, false), null, false /* nullable */, 0),
    mojo.internal.StructField('runOnOsLogin', 88, 0, RunOnOsLoginSpec.$, null, true /* nullable */, 0),
    mojo.internal.StructField('fileHandlingState', 96, 0, FileHandlingStateSpec.$, null, true /* nullable */, 0),
    mojo.internal.StructField('appSize', 104, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('dataSize', 112, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('publisherId', 120, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 136],]);
/**
 * @record
 */
export class App {
    constructor() {
        /** @type { !string } */
        this.id;
        /** @type { !AppType } */
        this.type;
        /** @type { !OptionalBool } */
        this.isPinned;
        /** @type { (string|undefined) } */
        this.title;
        /** @type { (string|undefined) } */
        this.description;
        /** @type { !OptionalBool } */
        this.isPolicyPinned;
        /** @type { !InstallReason } */
        this.installReason;
        /** @type { (string|undefined) } */
        this.version;
        /** @type { (string|undefined) } */
        this.size;
        /** @type { !Object<!PermissionType, !Permission> } */
        this.permissions;
        /** @type { !InstallSource } */
        this.installSource;
        /** @type { !boolean } */
        this.hideMoreSettings;
        /** @type { !boolean } */
        this.hidePinToShelf;
        /** @type { !boolean } */
        this.isPreferredApp;
        /** @type { !boolean } */
        this.hideWindowMode;
        /** @type { !boolean } */
        this.resizeLocked;
        /** @type { !boolean } */
        this.hideResizeLocked;
        /** @type { !WindowMode } */
        this.windowMode;
        /** @type { !Array<!string> } */
        this.supportedLinks;
        /** @type { (RunOnOsLogin|undefined) } */
        this.runOnOsLogin;
        /** @type { (FileHandlingState|undefined) } */
        this.fileHandlingState;
        /** @type { (string|undefined) } */
        this.appSize;
        /** @type { (string|undefined) } */
        this.dataSize;
        /** @type { !string } */
        this.publisherId;
    }
}
mojo.internal.Struct(ExtensionAppPermissionMessageSpec.$, 'ExtensionAppPermissionMessage', [
    mojo.internal.StructField('message', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('submessages', 8, 0, mojo.internal.Array(mojo.internal.String, false), null, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class ExtensionAppPermissionMessage {
    constructor() {
        /** @type { !string } */
        this.message;
        /** @type { !Array<!string> } */
        this.submessages;
    }
}
mojo.internal.Struct(FileHandlingStateSpec.$, 'FileHandlingState', [
    mojo.internal.StructField('enabled', 0, 0, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('isManaged', 0, 1, mojo.internal.Bool, false, false /* nullable */, 0),
    mojo.internal.StructField('userVisibleTypes', 8, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('userVisibleTypesLabel', 16, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('learnMoreUrl', 24, 0, url_mojom_UrlSpec.$, null, true /* nullable */, 0),
], [[0, 40],]);
/**
 * @record
 */
export class FileHandlingState {
    constructor() {
        /** @type { !boolean } */
        this.enabled;
        /** @type { !boolean } */
        this.isManaged;
        /** @type { !string } */
        this.userVisibleTypes;
        /** @type { !string } */
        this.userVisibleTypesLabel;
        /** @type { (url_mojom_Url|undefined) } */
        this.learnMoreUrl;
    }
}
mojo.internal.Struct(PageHandlerFactory_CreatePageHandler_ParamsSpec.$, 'PageHandlerFactory_CreatePageHandler_Params', [
    mojo.internal.StructField('page', 0, 0, mojo.internal.InterfaceProxy(PageRemote), null, false /* nullable */, 0),
    mojo.internal.StructField('handler', 8, 0, mojo.internal.InterfaceRequest(PageHandlerPendingReceiver), null, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandlerFactory_CreatePageHandler_Params {
    constructor() {
        /** @type { !PageRemote } */
        this.page;
        /** @type { !PageHandlerPendingReceiver } */
        this.handler;
    }
}
mojo.internal.Struct(PageHandler_GetApps_ParamsSpec.$, 'PageHandler_GetApps_Params', [], [[0, 8],]);
/**
 * @record
 */
export class PageHandler_GetApps_Params {
    constructor() {
    }
}
mojo.internal.Struct(PageHandler_GetApps_ResponseParamsSpec.$, 'PageHandler_GetApps_ResponseParams', [
    mojo.internal.StructField('apps', 0, 0, mojo.internal.Array(AppSpec.$, false), null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_GetApps_ResponseParams {
    constructor() {
        /** @type { !Array<!App> } */
        this.apps;
    }
}
mojo.internal.Struct(PageHandler_GetApp_ParamsSpec.$, 'PageHandler_GetApp_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_GetApp_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
    }
}
mojo.internal.Struct(PageHandler_GetApp_ResponseParamsSpec.$, 'PageHandler_GetApp_ResponseParams', [
    mojo.internal.StructField('app', 0, 0, AppSpec.$, null, true /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_GetApp_ResponseParams {
    constructor() {
        /** @type { (App|undefined) } */
        this.app;
    }
}
mojo.internal.Struct(PageHandler_GetExtensionAppPermissionMessages_ParamsSpec.$, 'PageHandler_GetExtensionAppPermissionMessages_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_GetExtensionAppPermissionMessages_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
    }
}
mojo.internal.Struct(PageHandler_GetExtensionAppPermissionMessages_ResponseParamsSpec.$, 'PageHandler_GetExtensionAppPermissionMessages_ResponseParams', [
    mojo.internal.StructField('messages', 0, 0, mojo.internal.Array(ExtensionAppPermissionMessageSpec.$, false), null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_GetExtensionAppPermissionMessages_ResponseParams {
    constructor() {
        /** @type { !Array<!ExtensionAppPermissionMessage> } */
        this.messages;
    }
}
mojo.internal.Struct(PageHandler_SetPinned_ParamsSpec.$, 'PageHandler_SetPinned_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('pinned', 8, 0, OptionalBoolSpec.$, 0, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandler_SetPinned_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
        /** @type { !OptionalBool } */
        this.pinned;
    }
}
mojo.internal.Struct(PageHandler_SetPermission_ParamsSpec.$, 'PageHandler_SetPermission_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('permission', 8, 0, PermissionSpec.$, null, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandler_SetPermission_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
        /** @type { !Permission } */
        this.permission;
    }
}
mojo.internal.Struct(PageHandler_SetResizeLocked_ParamsSpec.$, 'PageHandler_SetResizeLocked_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('locked', 8, 0, mojo.internal.Bool, false, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandler_SetResizeLocked_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
        /** @type { !boolean } */
        this.locked;
    }
}
mojo.internal.Struct(PageHandler_Uninstall_ParamsSpec.$, 'PageHandler_Uninstall_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_Uninstall_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
    }
}
mojo.internal.Struct(PageHandler_OpenNativeSettings_ParamsSpec.$, 'PageHandler_OpenNativeSettings_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_OpenNativeSettings_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
    }
}
mojo.internal.Struct(PageHandler_SetPreferredApp_ParamsSpec.$, 'PageHandler_SetPreferredApp_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('isPreferredApp', 8, 0, mojo.internal.Bool, false, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandler_SetPreferredApp_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
        /** @type { !boolean } */
        this.isPreferredApp;
    }
}
mojo.internal.Struct(PageHandler_GetOverlappingPreferredApps_ParamsSpec.$, 'PageHandler_GetOverlappingPreferredApps_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_GetOverlappingPreferredApps_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
    }
}
mojo.internal.Struct(PageHandler_GetOverlappingPreferredApps_ResponseParamsSpec.$, 'PageHandler_GetOverlappingPreferredApps_ResponseParams', [
    mojo.internal.StructField('appIds', 0, 0, mojo.internal.Array(mojo.internal.String, false), null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_GetOverlappingPreferredApps_ResponseParams {
    constructor() {
        /** @type { !Array<!string> } */
        this.appIds;
    }
}
mojo.internal.Struct(PageHandler_SetWindowMode_ParamsSpec.$, 'PageHandler_SetWindowMode_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('windowMode', 8, 0, WindowModeSpec.$, 0, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandler_SetWindowMode_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
        /** @type { !WindowMode } */
        this.windowMode;
    }
}
mojo.internal.Struct(PageHandler_SetRunOnOsLoginMode_ParamsSpec.$, 'PageHandler_SetRunOnOsLoginMode_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('runOnOsLoginMode', 8, 0, RunOnOsLoginModeSpec.$, 0, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandler_SetRunOnOsLoginMode_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
        /** @type { !RunOnOsLoginMode } */
        this.runOnOsLoginMode;
    }
}
mojo.internal.Struct(PageHandler_SetFileHandlingEnabled_ParamsSpec.$, 'PageHandler_SetFileHandlingEnabled_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('enabled', 8, 0, mojo.internal.Bool, false, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class PageHandler_SetFileHandlingEnabled_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
        /** @type { !boolean } */
        this.enabled;
    }
}
mojo.internal.Struct(PageHandler_ShowDefaultAppAssociationsUi_ParamsSpec.$, 'PageHandler_ShowDefaultAppAssociationsUi_Params', [], [[0, 8],]);
/**
 * @record
 */
export class PageHandler_ShowDefaultAppAssociationsUi_Params {
    constructor() {
    }
}
mojo.internal.Struct(PageHandler_OpenStorePage_ParamsSpec.$, 'PageHandler_OpenStorePage_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class PageHandler_OpenStorePage_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
    }
}
mojo.internal.Struct(Page_OnAppAdded_ParamsSpec.$, 'Page_OnAppAdded_Params', [
    mojo.internal.StructField('app', 0, 0, AppSpec.$, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class Page_OnAppAdded_Params {
    constructor() {
        /** @type { !App } */
        this.app;
    }
}
mojo.internal.Struct(Page_OnAppChanged_ParamsSpec.$, 'Page_OnAppChanged_Params', [
    mojo.internal.StructField('update', 0, 0, AppSpec.$, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class Page_OnAppChanged_Params {
    constructor() {
        /** @type { !App } */
        this.update;
    }
}
mojo.internal.Struct(Page_OnAppRemoved_ParamsSpec.$, 'Page_OnAppRemoved_Params', [
    mojo.internal.StructField('appId', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class Page_OnAppRemoved_Params {
    constructor() {
        /** @type { !string } */
        this.appId;
    }
}
mojo.internal.Union(PermissionValueSpec.$, 'PermissionValue', {
    'boolValue': {
        'ordinal': 0,
        'type': mojo.internal.Bool,
    },
    'tristateValue': {
        'ordinal': 1,
        'type': TriStateSpec.$,
    },
});
/**
 * @typedef { {
 *   boolValue: (!boolean|undefined),
 *   tristateValue: (!TriState|undefined),
 * } }
 */
export const PermissionValue = {};
